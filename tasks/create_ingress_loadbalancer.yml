---
# Workaround code using neutron-client via shell instead of ansible openstack loadblancer core module,
# which is compatible only with OpenStack Octavia lbaas implementation

# Workflow:
#
# Get existing load balancers
#
# Get worker nodes ip addresses for Ingress
# Get Ingress FIP
# Create Ingress lb
# Check if FIP address associated
# Get Ingress lb port ID
# Associate Ingress Floating IP to Virtual IP
# Create Ingress listener
# Create Ingress pool
# Create Ingress pool members
# Create Ingress listener health monitor

- name: Set facts
  set_fact:
    neutron: "{{ which_neutron_result.stdout }}"
    ocp_id: "{{ openshift_cluster_id }}"
    ingress_port: 443
    lb_ingress_name: "lb_ingress"
    lb_ingress_vip_address: "{{ subnet_range | next_nth_usable(21) }}"
    ingress_pool_members_exist: false

- name: Get load balancer list
  local_action: shell {{ neutron }} lbaas-loadbalancer-list -f json | jq -r '.[].name'
  register: lb_list
  check_mode: no

# TODO: Handle all worker nodes, not only firt three 
- name: Get worker nodes ip addresses
  local_action: shell {{ neutron }} port-show -f json {{ os_port_worker }}-{{ item }} | jq -r '.fixed_ips[] | .ip_address'
  register: fixed_ip_workers
  loop: [0, 1, 2]
  check_mode: no

- name: Get Ingress Floating IP ID
  local_action: shell {{ neutron }} floatingip-list -f json | jq -r ".[] | select(.floating_ip_address==\"{{ lb_ingress_fip_address }}\") | .id"
  register: ingress_fip_id
  check_mode: no

- name: Fail if Ingress Floating IP not found
  fail:
    msg: "Ingress Floating IP ({{ lb_ingress_fip_address }}) not found!"
  when: ingress_fip_id.stdout == ""

- name: Create Ingress load balancer
  local_action: shell {{ neutron }} lbaas-loadbalancer-create --name {{ lb_ingress_name }} --description "Ingress Load Balancer" --vip-address "{{ lb_ingress_vip_address }}" {{ os_subnet }}
  when: lb_ingress_name not in lb_list.stdout_lines

- name: Check if Ingress FIP ({{ lb_ingress_fip_address }}) has associated VIP
  local_action: shell {{ neutron }} floatingip-list -f json | jq -r ".[] | select(.floating_ip_address==\"{{ lb_ingress_fip_address }}\") | .fixed_ip_address"
  register: ingress_fip_to_vip_check
  check_mode: no

- name: Fail if Ingress Floating IP already set to different Virtual IP
  fail:
    msg: "Ingress Floating IP already set to different Virtual IP ({{ ingress_fip_to_vip_check.stdout }}) then requested ({{ lb_ingress_vip_address }})!"
  when: ingress_fip_to_vip_check.stdout != "" and ingress_fip_to_vip_check.stdout != lb_ingress_vip_address

- name: Get Ingress load balancer port ID
  local_action: shell {{ neutron }} lbaas-loadbalancer-show lb_ingress -f json | jq -r '.vip_port_id'
  register: lb_ingress_port_id 
  check_mode: no

- name: Associate Ingress Floating IP to Virtual IP
  local_action: shell {{ neutron }} floatingip-associate {{ ingress_fip_id.stdout }} {{ lb_ingress_port_id.stdout }}
  when: ingress_fip_to_vip_check.stdout == ""

- name: Check if Ingress listener exists
  local_action: shell {{ neutron }} lbaas-listener-list -f json | jq -r '.[].name'
  register: listener_ingress_check
  check_mode: no

- name: Create Ingress listener
  local_action: shell {{ neutron }} lbaas-listener-create -f yaml --name listener_ingress --loadbalancer {{ lb_ingress_name }} --protocol TCP --protocol-port {{ ingress_port }}
  when: "'listener_ingress' not in {{ listener_ingress_check.stdout_lines }}"

- name: Check if Ingress pool exists
  local_action: shell {{ neutron }} lbaas-pool-list -f json | jq -r '.[].name'
  register: pool_ingress_check
  check_mode: no

- name: Create Ingress pool
  local_action: shell {{ neutron }} lbaas-pool-create --name pool_ingress --lb-algorithm ROUND_ROBIN --protocol TCP --listener listener_ingress
  when: "'pool_ingress' not in {{ pool_ingress_check.stdout_lines }}"

- name: Check if Ingress pool members exist
  local_action: shell {{ neutron }} lbaas-member-list pool_ingress -f json | jq -r '.[].address'
  register: members_ingress_check
  check_mode: no

- name: Set Ingress pool members fact
  set_fact:
    ingress_pool_members_exist: true
  loop: "{{ fixed_ip_workers.results }}"
  when: item.stdout in members_ingress_check.stdout
  check_mode: no

- name: Create Ingress pool members
  local_action: shell {{ neutron }} lbaas-member-create -f yaml --weight 1 --subnet {{ os_subnet }} --address {{ item.stdout }} --protocol-port {{ ingress_port }} pool_ingress
  loop: "{{ fixed_ip_workers.results }}"
  when: ingress_pool_members_exist == false

- name: Get Ingress listener health monitor
  local_action: shell {{ neutron }} lbaas-pool-show pool_ingress -f json | jq -r ".healthmonitor_id"
  register: listener_health_monitor_ingress

- name: Create Ingress listener health monitor
  local_action: shell {{ neutron }} lbaas-healthmonitor-create  --pool pool_ingress --delay 5 --timeout 5 --max-retries 3 --type TCP
  when: listener_health_monitor_ingress.stdout == "null"
